-- This file was automatically generated by alyxlib.

-- alyxlib can only run on server
if IsClient() then return end
-- Load alyxlib before using it, in case this mod loads before the alyxlib mod.
require("alyxlib.core")

-- execute code or load mod libraries here
require "resin_watch.classes.watch"

local watch_name = "resin_watch_attached_to_hand"

EasyConvars:RegisterConvar("resin_watch_radius", "700", "Distance to track resin")
EasyConvars:SetPersistent("resin_watch_radius", true)
EasyConvars:RegisterConvar("resin_watch_notify", "1", "Plays sound and vibrates when resin nearby")
EasyConvars:SetPersistent("resin_watch_notify", true)

EasyConvars:RegisterConvar("resin_watch_level_up", "90", "How far above the watch resin is considered on another floor")
EasyConvars:SetPersistent("resin_watch_level_up", true)
EasyConvars:RegisterConvar("resin_watch_level_down", "-90", "How far below the watch resin is considered on another floor")
EasyConvars:SetPersistent("resin_watch_level_down", true)

EasyConvars:Register("resin_watch_inverted", "0", function (enabled)
    if not IsEntity(ResinWatch, true) then
        EasyConvars:Warn("Cannot set resin_watch_inverted, resin watch does not exist in game!")
        return
    end

    ResinWatch:AttachToHand()
end, "Watch faces underneath the wrist")
EasyConvars:SetPersistent("resin_watch_inverted", true)

EasyConvars:Register("resin_watch_primary_hand", "0", function (enabled)
    if not IsEntity(ResinWatch, true) then
        EasyConvars:Warn("Cannot set resin_watch_primary_hand, resin watch does not exist in game!")
        return
    end

    ResinWatch:AttachToHand()
end, "Watch attaches to primary hand")
EasyConvars:SetPersistent("resin_watch_primary_hand", true)

EasyConvars:Register("resin_watch_allow_ammo_tracking", "1", function (enabled)
    EasyConvars:SetRaw("resin_watch_allow_ammo_tracking", enabled)

    if IsEntity(ResinWatch, true) then
        ResinWatch:UpdateTrackedClassList()
        ResinWatch:UpdateCounterPanel()
        enabled = truthy(enabled)
        if not enabled and not EasyConvars:GetBool("resin_watch_allow_item_tracking") then
            ResinWatch:SetTrackingMode("resin")
        end
    end
end, "Allow ammo to be tracked by the watch's alternate tracking mode")
EasyConvars:SetPersistent("resin_watch_allow_ammo_tracking", true)

EasyConvars:Register("resin_watch_allow_item_tracking", "1", function (enabled)
    EasyConvars:SetRaw("resin_watch_allow_item_tracking", enabled)

    if IsEntity(ResinWatch, true) then
        ResinWatch:UpdateTrackedClassList()
        ResinWatch:UpdateCounterPanel()
        enabled = truthy(enabled)
        if not enabled and not EasyConvars:GetBool("resin_watch_allow_ammo_tracking") then
            ResinWatch:SetTrackingMode("resin")
        end
    end
end, "Allow items to be tracked by the watch's' alternate tracking mode")
EasyConvars:SetPersistent("resin_watch_allow_item_tracking", true)

local DEFAULT_BUTTONS = DefaultTable({
    [VR_CONTROLLER_TYPE_KNUCKLES] = DIGITAL_INPUT_ARM_XEN_GRENADE,
    [VR_CONTROLLER_TYPE_RIFT_S] = DIGITAL_INPUT_USE_GRIP,
}, DIGITAL_INPUT_ARM_XEN_GRENADE)

EasyConvars:Register("resin_watch_toggle_button",
-- Initializer
function()
    return DEFAULT_BUTTONS[Player:GetVRControllerType()]
end,
-- Main callback
function (buttonStr)
    local button = tonumber(buttonStr)
    if not button then
        warn("Value '"..buttonStr.."' is not a valid button ID, must be [0-27]!")
        return
    end

    if not IsEntity(ResinWatch, true) then
        EasyConvars:Warn("Cannot set resin_watch_toggle_button, resin watch does not exist in game!")
        return
    end

    EasyConvars:SetRaw("resin_watch_toggle_button", button)
    ResinWatch:UpdateControllerInputs()

    return button
end)
EasyConvars:SetPersistent("resin_watch_toggle_button", true)

---Global entity for Resin Watch.
---@type ResinWatch
_G.ResinWatch = nil


---@param params PLAYER_EVENT_VR_PLAYER_READY
RegisterPlayerEventCallback("vr_player_ready", function (params)
    if Entities:FindByName(nil, watch_name) then
        return
    end

    devprint("Spawning resin watch...")

    SpawnEntityFromTableAsynchronous("prop_dynamic", {
        targetname = "resin_watch_attached_to_hand",
        model = "models/resin_watch/resin_watch_base.vmdl",
        vscripts = "resin_watch/classes/watch",
        disableshadows = "1",
    }, function (spawnedEnt)
        ---@cast spawnedEnt ResinWatch
        spawnedEnt:AttachToHand()
        -- Manually track primary because watch is attached to hand after Ready function
        RegisterPlayerEventCallback("primary_hand_changed", spawnedEnt._DoPrimaryHandChangeTracking, spawnedEnt)
        ResinWatch = spawnedEnt
    end, nil)

end)

--- NO VR TESTING

RegisterPlayerEventCallback("novr_player", function (params)
    EasyConvars:Register("resin_watch_novr_debug", "", function (enabled)
        enabled = truthy(enabled)
        if enabled then
            SpawnEntityFromTableAsynchronous("prop_dynamic", {
                targetname = "resin_watch_novr",
                model = "models/resin_watch/resin_watch_base.vmdl",
                vscripts = "resin_watch/classes/watch",
                disableshadows = "1",
            }, function (spawnedEnt)
                ---@cast spawnedEnt ResinWatch
                spawnedEnt:SetParent(Player, "")
                spawnedEnt:SetLocalOrigin(Vector(8,0,60))
                spawnedEnt:SetLocalAngles(0,-90,45)
                ResinWatch = spawnedEnt
            end, nil)
        end
    end)

    Convars:RegisterCommand("resin_watch_novr_toggle_mode", function ()
        if IsEntity(ResinWatch, true) then
            ResinWatch:ToggleTrackingMode()
        end
    end, "", 0)
end)

print("Resin watch v1.0.1 initialized...")